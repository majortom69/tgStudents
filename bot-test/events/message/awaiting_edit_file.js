const fetch = require('node-fetch');
const fs = require('fs');
const path = require('path');
const { promisify } = require('util');
const { pipeline } = require('stream');
const { token } = require('../../bot'); // Import the token from bot.js
const { addAttachments, getUserAchievements } = require('../../database');

const pipelineAsync = promisify(pipeline);
const uploadsDir = './uploads'; // –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤

module.exports = {
    step: 'awaiting_edit_file',
    execute: async (bot, msg, userStates) => {
        const chatId = msg.chat.id;
        const page = userStates.page;
        const achievements = await getUserAchievements(chatId);
        let currentAchievement = achievements[page - 1];

        const processFile = async (fileId, chatId, mediaGroupId, fileType) => {
            bot.getFile(fileId).then(file => {
                const filePath = file.file_path;
                const url = `https://api.telegram.org/file/bot${token}/${filePath}`;

                fetch(url)
                    .then(async res => {
                        const uniqueFilename = `${Date.now()}-${path.basename(filePath)}`;
                        const dest = fs.createWriteStream(path.join(uploadsDir, uniqueFilename));
                        try {
                            await pipelineAsync(res.body, dest);
                            const savedFilePath = path.join(uploadsDir, uniqueFilename);

                            // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            userStates[chatId].attachments.push({ path: savedFilePath, type: fileType });

                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞
                            if (!userStates[chatId].messageSent) {
                                bot.sendMessage(chatId, `–§–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ–∞–π–ª –∏–ª–∏ ‚ö†Ô∏è–≤–≤–µ–¥–∏—Ç–µ /done –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è‚ö†Ô∏è.`);
                                userStates[chatId].messageSent = true;
                            }
                        } catch (err) {
                            console.error(err);
                            bot.sendMessage(chatId, `‚ö†Ô∏è–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª (${fileType}).‚ö†Ô∏è`);
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        bot.sendMessage(chatId, `‚ö†Ô∏è–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª (${fileType}).‚ö†Ô∏è`);
                    });
            });
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        if ((msg.media_group_id || msg.photo) && msg.photo) {
            if (!userStates[chatId]) {
                userStates[chatId] = { attachments: [], messageSent: false };
            }

            const fileId = msg.photo[msg.photo.length - 1].file_id;
            await processFile(fileId, chatId, msg.media_group_id, 'image');
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (PDF –∏ DOC)
        else if (msg.document) {
            if (!userStates[chatId]) {
                userStates[chatId] = { attachments: [], messageSent: false };
            }

            const fileId = msg.document.file_id;
            const fileType = msg.document.mime_type.split('/')[1]; // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ (pdf, doc, etc.)
            await processFile(fileId, chatId, msg.media_group_id, fileType);
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /done –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        else if (msg.text === '/done') {
            if (userStates[chatId] && userStates[chatId].attachments.length > 0) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                currentAchievement.ATTACHMENTS = userStates[chatId].attachments.map(att => att.path);
                addAttachments(currentAchievement, currentAchievement.ACHIEVEMENT_ID);

                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                bot.sendMessage(chatId, 'üéâ–§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!üéâ');

                // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                delete userStates[chatId];
            } else {
                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —Ñ–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
                bot.sendMessage(chatId, '‚ö†Ô∏è–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤!‚ö†Ô∏è');
            }
        }
    }
};
